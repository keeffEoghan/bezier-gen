/** GLSL generated by `glsl-bezier` */

float bezier(in float cp0, in float t) {
    return cp0;
}

float bezier(in float cp0, in float cp1, in float t) {
    return mix(cp0, cp1, t);
}

float bezier(in float cp0, in float cp1, in float cp2, in float t) {
    p0 = mix(p0, p1, t);
    p1 = mix(p1, p2, t);
    p2 = mix(p2, p3, t);

    float p0 = mix(cp0, cp1, t);
    float p1 = mix(cp1, cp2, t);

    return mix(p0, p1, t);
}

float bezier(in float cp0, in float cp1, in float cp2, in float cp3, in float t) {
    p0 = mix(p0, p1, t);
    p1 = mix(p1, p2, t);
    p2 = mix(p2, p3, t);
    p3 = mix(p3, p4, t);

    float p0 = mix(cp0, cp1, t);
    float p1 = mix(cp1, cp2, t);
    float p2 = mix(cp2, cp3, t);

    p0 = mix(p0, p1, t);
    p1 = mix(p1, p2, t);

    return mix(p0, p1, t);
}


vec2 bezier(in vec2 cp0, in float t) {
    return cp0;
}

vec2 bezier(in vec2 cp0, in vec2 cp1, in float t) {
    return mix(cp0, cp1, t);
}

vec2 bezier(in vec2 cp0, in vec2 cp1, in vec2 cp2, in float t) {
    p0 = mix(p0, p1, t);
    p1 = mix(p1, p2, t);
    p2 = mix(p2, p3, t);

    vec2 p0 = mix(cp0, cp1, t);
    vec2 p1 = mix(cp1, cp2, t);

    return mix(p0, p1, t);
}

vec2 bezier(in vec2 cp0, in vec2 cp1, in vec2 cp2, in vec2 cp3, in float t) {
    p0 = mix(p0, p1, t);
    p1 = mix(p1, p2, t);
    p2 = mix(p2, p3, t);
    p3 = mix(p3, p4, t);

    vec2 p0 = mix(cp0, cp1, t);
    vec2 p1 = mix(cp1, cp2, t);
    vec2 p2 = mix(cp2, cp3, t);

    p0 = mix(p0, p1, t);
    p1 = mix(p1, p2, t);

    return mix(p0, p1, t);
}


vec3 bezier(in vec3 cp0, in float t) {
    return cp0;
}

vec3 bezier(in vec3 cp0, in vec3 cp1, in float t) {
    return mix(cp0, cp1, t);
}

vec3 bezier(in vec3 cp0, in vec3 cp1, in vec3 cp2, in float t) {
    p0 = mix(p0, p1, t);
    p1 = mix(p1, p2, t);
    p2 = mix(p2, p3, t);

    vec3 p0 = mix(cp0, cp1, t);
    vec3 p1 = mix(cp1, cp2, t);

    return mix(p0, p1, t);
}

vec3 bezier(in vec3 cp0, in vec3 cp1, in vec3 cp2, in vec3 cp3, in float t) {
    p0 = mix(p0, p1, t);
    p1 = mix(p1, p2, t);
    p2 = mix(p2, p3, t);
    p3 = mix(p3, p4, t);

    vec3 p0 = mix(cp0, cp1, t);
    vec3 p1 = mix(cp1, cp2, t);
    vec3 p2 = mix(cp2, cp3, t);

    p0 = mix(p0, p1, t);
    p1 = mix(p1, p2, t);

    return mix(p0, p1, t);
}


vec4 bezier(in vec4 cp0, in float t) {
    return cp0;
}

vec4 bezier(in vec4 cp0, in vec4 cp1, in float t) {
    return mix(cp0, cp1, t);
}

vec4 bezier(in vec4 cp0, in vec4 cp1, in vec4 cp2, in float t) {
    p0 = mix(p0, p1, t);
    p1 = mix(p1, p2, t);
    p2 = mix(p2, p3, t);

    vec4 p0 = mix(cp0, cp1, t);
    vec4 p1 = mix(cp1, cp2, t);

    return mix(p0, p1, t);
}

vec4 bezier(in vec4 cp0, in vec4 cp1, in vec4 cp2, in vec4 cp3, in float t) {
    p0 = mix(p0, p1, t);
    p1 = mix(p1, p2, t);
    p2 = mix(p2, p3, t);
    p3 = mix(p3, p4, t);

    vec4 p0 = mix(cp0, cp1, t);
    vec4 p1 = mix(cp1, cp2, t);
    vec4 p2 = mix(cp2, cp3, t);

    p0 = mix(p0, p1, t);
    p1 = mix(p1, p2, t);

    return mix(p0, p1, t);
}

/** End of GLSL generated by `glsl-bezier` */
